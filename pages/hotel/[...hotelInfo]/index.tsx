import React from "react";
import { motion, motionValue } from "framer-motion";
import { SubmitHandler, useForm } from "react-hook-form";
import { SocailIcon } from "react-social-icons";
import Link from "next/link";
import Image from "next/image";
import Head from "next/head";
import { useRouter } from "next/router";
import { sanityClient } from "@/sanity";
import { groq } from "next-sanity";
import moment from "moment";
import ImageGalleryCard from "@/components/imageGallery/ImageGalleryCard";

import {
  GlobeAltIcon,
  MenuIcon,
  UserCircleIcon,
  UsersIcon,
  ArrowLeftIcon,
  ArrowRightIcon,
  MapIcon,
  LocationMarkerIcon,
} from "@heroicons/react/solid";

type Props = {
  hotelInfo: any;
  checkin: any;
  chechout: any;
  num_nights: any;
  num_guests: any;
  hotel_id: any;
};

export function addDays(
  startDate: string | number | Date,
  numberOfDays: number
) {
  const result = new Date(startDate);
  result.setDate(result.getDate() + numberOfDays);
  return result;
}

export function getDateDifference(
  checkInDate: string | number | Date,
  checkOutDate: string | number | Date
) {
  var timeDiff =
    new Date(checkOutDate).getTime() - new Date(checkInDate).getTime();
  var dayDiff = timeDiff / (1000 * 3600 * 24);

  return Math.floor(dayDiff);
}

export default function HotelInformation(props: Props) {
  const router = useRouter();

  return (
    <React.Fragment>
      <Head>
        <title>StayBook Hotels</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/favicon.png" />
      </Head>

      <main className={`w-screen`}>
        <motion.div className={`relative w-screen flex flex-col mb-5`}>
          <ImageGalleryCard hotelImgList={props.hotelInfo.image_List} />
        </motion.div>

        <motion.div
          className={`relative w-[95%] flex flex-col md:flex-row justify-between mx-auto mb-10`}
        >
          <motion.div
            className={`relative w-full md:w-[60%] overflow-y-scroll`}
          >
            <motion.div className={`w-full mb-4 text-justify`}>
              <h1 className={`text-5xl font-serif`}>{props.hotelInfo.name}</h1>
            </motion.div>
            <motion.div className={`w-full mb-4 text-justify`}>
              <p className={`text-xl font-mono text-justify`}>
                {props.hotelInfo.description}
              </p>
            </motion.div>
            <motion.div
              className={`w-full flex mb-4 text-justify items-center align-middle`}
            >
              <a
                target="_blank"
                href={props.hotelInfo.map}
                className={`cursor-pointer`}
              >
                <div
                  className={`p-2 rounded-full items-center align-middle hover:bg-slate-200 mr-2`}
                >
                  <LocationMarkerIcon
                    className={`relative fill-black h-7 w-7 rounded-full cursor-pointer`}
                  />
                </div>
              </a>
              <p className={`text-xl font-light text-justify`}>
                {props.hotelInfo.address}
              </p>
            </motion.div>

            <motion.div
              className={`w-full flex flex-col justify-between lg:flex-row mb-4 items-center align-middle`}
            >
              <motion.div className={`flex text-start items-center align-middle py-1`}>
                <p className={`font-semibold text-xl text-red-600`}>PHONE:&nbsp;&nbsp;</p>
                <p className={`text-xl`}>{props.hotelInfo.phone}</p>
              </motion.div>
              <motion.div className={`flex text-start items-center align-middle py-1`}>
                <p className={`font-semibold text-xl text-red-600`}>EMAIL:&nbsp;&nbsp;</p>
                <p className={`text-xl`}>{props.hotelInfo.email}</p>
              </motion.div>
            </motion.div>

            <motion.div className={`rounded-3xl border-1 border-red-400`}></motion.div>
          </motion.div>

          <motion.div
            className={`hidden md:bsolute w-[35%] h-screen right-0`}
          ></motion.div>
        </motion.div>
      </main>
    </React.Fragment>
  );
}

export async function getServerSideProps(context: any) {
  const { params, query, req, res } = await context;

  const slug_Name = params?.hotelInfo[0];
  const checkin = moment(query.checkin, "DD-MM-YYYY").toDate();
  const chechout = addDays(
    moment(query.checkin, "DD-MM-YYYY").toDate(),
    Number(query.num_nights)
  );
  const num_nights = query.num_nights;
  const num_guests = query.num_guests;
  const hotel_id = query?.hotel_id;

  const hotelInfoQuery = groq`
    *[_type == "hotel" && slug.current == "${slug_Name}" || id == "${hotel_id}"] {
      address,
      amenities[],
      card_amenities,
      card_amenities_ref[],
      description,
      email,
      hotel_amenities[],
      hotel_description[],
      hotel_nearby_places[],
      id,
      "image_List":images[].asset->url,
      map,
      meta_desc,
      meta_title,
      name,
      phone,
      rooms[],
      "slug_Name": slug.current,
    }
  `;

  const hotelInfo: any[] = await sanityClient.fetch(hotelInfoQuery);

  return {
    props: {
      hotelInfo: hotelInfo[0],
      checkin: String(moment(query.checkin, "DD-MM-YYYY").toDate()),
      chechout: String(
        addDays(
          moment(query.checkin, "DD-MM-YYYY").toDate(),
          Number(query.num_nights)
        )
      ),
      num_nights: query.num_nights,
      num_guests: query.num_guests,
      hotel_id: query.hotel_id,
    },
  };
}
