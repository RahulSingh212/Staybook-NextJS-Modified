import React from "react";
import { motion, motionValue } from "framer-motion";
import Link from "next/link";
import Image from "next/image";
import Head from "next/head";
import { extractJWTValues } from "@/lib/helper";
import { useRouter } from "next/router";
import { groq } from "next-sanity";
import { sanityClient } from "@/sanity";
import { Dropdown } from "@nextui-org/react";
import GuestDropDown from "@/components/DropDown/GuestDropDown";

type Props = {
  hotelsList: any[];
};

export default function HotelCalendarListing(props: Props) {
  const router = useRouter();

  const menuItems = [
    { key: "2", name: "2 Guests" },
    { key: "3", name: "3 Guests" },
    { key: "4", name: "3 Guests" },
  ];

  return (
    <React.Fragment>
      <Head>
        <title>StayBook - Calendar</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/favicon.png" />
      </Head>
      <main
        className={`w-screen flex flex-col justify-center align-middle items-center`}
      >
        <div className={`flex w-[95%] justify-center my-6`}>
          <h1 className={`text-4xl font-serif text-center`}>
            Your Available Hotels
          </h1>
        </div>
        {props.hotelsList.map((hotel, index) => (
          <div
            key={hotel._id}
            className={`relative flex flex-col sm:flex-row align-middle justify-between w-[95%] px-4 py-3 bg-slate-200 mb-4 rounded-md`}
          >
            <div className={`relative flex align-middle items-center`}>
              {hotel.hotel_Name}
            </div>
            <GuestDropDown key={hotel._id} firebase_Id={hotel.firebase_Id.trim()} />
          </div>
        ))}
      </main>
    </React.Fragment>
  );
}

export const getServerSideProps = async (context: any) => {
  const hotelsListQuery = groq`
    *[_type == "hotel"] | order(order asc) {
      _id,
      "hotel_Name": name,
      "firebase_Id": hotel_firebase_Unique_Id,
    }
  `;

  const hotelsList: any[] = await sanityClient.fetch(hotelsListQuery);
  return {
    props: {
      hotelsList,
    },
  };
};
