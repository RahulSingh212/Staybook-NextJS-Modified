import React from "react";
import { motion, motionValue } from "framer-motion";
import Head from "next/head";
import { useRouter } from "next/router";
import { sanityClient } from "@/sanity";
import { groq } from "next-sanity";
import RegionCard from "@/components/widgets/RegionCard";

type Props = {
  hotelRegionsList: any[];
};

export default function HotelRegions(props: Props) {
  const router = useRouter();
  const [hotelRegionIdx, setHotelRegionIdx] = React.useState<number>(0);

  React.useEffect(() => {
    const interval = setInterval(() => {
      const newIdx =
        (hotelRegionIdx + Number(1)) % props.hotelRegionsList.length;
      setHotelRegionIdx(newIdx);
    }, 5000);

    return () => clearInterval(interval);
  }, [hotelRegionIdx, props.hotelRegionsList.length]);

  const selectHotelRegionCardHandler = (selectedIndex: number) => {
    setHotelRegionIdx(selectedIndex);
  };

  return (
    <React.Fragment>
      <Head>
        <title>StayBook Regions</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/favicon.png" />
      </Head>
      <main>
        <React.Fragment>
          <motion.div
            className={`relative flex flex-col justify-evenly items-center align-middle mx-w-full mb-16`}
          >
            <motion.div
              className={`flex flex-col justify-center items-center align-middle pb-6 pt-2`}
            >
              <motion.h1
                initial={{ opacity: 0.0, y: 30 }}
                transition={{ duration: 2.0, type: "spring" }}
                whileInView={{ opacity: 1, y: 0 }}
                className={`text-5xl sm:text-6xl md:text-7xl text-center px-5`}
              >
                Hotel Regions
              </motion.h1>
            </motion.div>
            <motion.div
              initial={{ opacity: 0.0, y: 30 }}
              transition={{ duration: 2.0, type: "spring" }}
              whileInView={{ opacity: 1, y: 0 }}
              className={`relative w-[90%] flex flex-col items-center space-y-10 overflow-x-scroll my-2 scrollbar-hide`}
            >
              {props.hotelRegionsList.map((hr: any) => (
                <RegionCard key={hr._id} hotelRegion={hr} />
              ))}
            </motion.div>
          </motion.div>
        </React.Fragment>
      </main>
    </React.Fragment>
  );
}

export const getStaticProps = async () => {
  const hotelRegionsListQuery = groq`
    *[_type == "navoptions"]{
      _id,
      name,
      "slug_Name": slug.current,
      "image_Url": image.asset->url
    }
  `;

  const hotelRegionsList: any[] = await sanityClient.fetch(
    hotelRegionsListQuery
  );
  return {
    props: {
      hotelRegionsList,
    },
  };
};
