import React from "react";
import { motion, motionValue } from "framer-motion";
import { SubmitHandler, useForm } from "react-hook-form";
import { SocailIcon } from "react-social-icons";
import Link from "next/link";
import Image from "next/image";
import Head from "next/head";
import {
  GET_USER_TOKEN_OBJECT,
  USER_ACCESS_TOKEN,
  extractJWTValues,
} from "@/lib/helper";
import { useRouter } from "next/router";
import { parse } from "cookie";

import InfoTile from "@/components/profile/InfoTile";
import NameTile from "@/components/profile/NameTile";
import {
  getUserAccessTokenObject,
  getUserProfileDetails,
} from "@/lib/firebase/userHandler";

type Props = {
  userDetails: any;
};

export const fetchHandler = async () => {
  const data = await getUserAccessTokenObject();
  console.log(data);
  return data;
};

export default function PersonalInformation(props: Props) {
  return (
    <React.Fragment>
      <Head>
        <title>Personal Information</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/favicon.png" />
      </Head>
      <main className={`w-screen flex flex-col items-center`}>
        {/* <button onClick={fetchHandler}>Fetch</button> */}
        <motion.div className={`relative flex w-[90%] mt-10`}>
          <h1 className={`text-md font-normal`}>
            Profile &nbsp;ï¼ž&nbsp; Personal info
          </h1>
        </motion.div>
        <motion.div className={`relative flex w-[90%] mt-3`}>
          <h1 className={`text-4xl font-bold`}>Personal info</h1>
        </motion.div>
        <motion.div
          className={`relative flex flex-col space-y-8 w-[90%] mt-16`}
        >
          <InfoTile
            firebaseHeaderName={`User_Display_Name`}
            headerText={"Display Name"}
            tileText={props.userDetails.User_Display_Name}
            placeHolderText={"Display Name"}
            descriptionText={"Enter your Display Name"}
            inputType={"text"}
          />
          <NameTile
            headerText={`Legal name`}
            firstNameplaceHolderText={`First Name`}
            firstText={props.userDetails.User_First_Name}
            middleNameplaceHolderText={`Middle Name`}
            middleText={props.userDetails.User_Middle_Name}
            lastNameplaceHolderText={`Last Name`}
            lastText={props.userDetails.User_Last_Name}
            descriptionText={"Enter your full name"}
            inputType={"name"}
          />
          <InfoTile
            firebaseHeaderName={`User_Mobile_Number`}
            headerText={"Mobile Number"}
            tileText={props.userDetails.User_Mobile_Number}
            placeHolderText={"Mobile Number"}
            descriptionText={"Enter your Mobile Number"}
            inputType={"number"}
          />
          <InfoTile
            firebaseHeaderName={`User_Alternate_Mobile_Number`}
            headerText={"Alt Mobile Number"}
            tileText={props.userDetails.User_Alternate_Mobile_Number}
            placeHolderText={"Alternate Mobile Number"}
            descriptionText={"Enter your Alternate Mobile Number"}
            inputType={"number"}
          />
        </motion.div>
      </main>
    </React.Fragment>
  );
}

// export async function getStaticPaths() {
//   return {
//     paths: [
//       {
//         params: { personal-info: "personal-info" },
//       }
//     ],
//     // fallback: true,
//     fallback: "true",
//   };
// }

export async function getServerSideProps(context: any) {
  const { req, res } = context;
  const cookies = parse(req.headers.cookie || "");
  const userAccessToken = cookies[USER_ACCESS_TOKEN];
  const userAccessTokenObject = await extractJWTValues(userAccessToken);
  const userCollectionDoc = await getUserProfileDetails(userAccessTokenObject);
  // console.log(userCollectionDoc);
  return {
    props: {
      userDetails: userCollectionDoc,
    },
  };
}
