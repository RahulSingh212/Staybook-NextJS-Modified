import React from "react";
import { motion, motionValue } from "framer-motion";
import { SubmitHandler, useForm } from "react-hook-form";
import { SocailIcon } from "react-social-icons";
import Link from "next/link";
import Image from "next/image";
import Head from "next/head";
import { useRouter } from "next/router";
import { sanityClient } from "@/sanity";
import { groq } from "next-sanity";
import HotelCard from "@/components/screens/hotel/HotelCard";

type Props = {
  hotelsInRegionList: any[];
};

export default function RegionHotels(props: Props) {
  const router = useRouter();

  if (props.hotelsInRegionList === null || props.hotelsInRegionList.length === 0) {
    return <p>Loading...</p>
  }

  return (
    <React.Fragment>
      <Head>
        <title>StayBook Hotels</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/favicon.png" />
      </Head>

      <main className={`w-screen`}>
        <motion.div
          initial={{ opacity: 0.0, x: -50 }}
          transition={{ duration: 3.0, type: "spring" }}
          whileInView={{ opacity: 1, x: 0 }}
          className={`flex items-center align-middle justify-center text-center py-5 px-2`}
        >
          <motion.h1
            className={`text-3xl sm:text-4xl md:text-5xl lg:text-6xl text-center`}
          >
            {props.hotelsInRegionList[0].region_Name}
          </motion.h1>
        </motion.div>

        <motion.div className={`relative flex flex-col`}>
          {props.hotelsInRegionList[0].hotelsList.map(
            (hotel: any, index: number) => (
              <HotelCard key={hotel._id} hotelInfo={hotel} />
            )
          )}
        </motion.div>
      </main>
    </React.Fragment>
  );
}

export async function getStaticPaths() {
  return {
    paths: [
      {
        params: { hotelRegionName: "hotels-in-munsoori" },
      },
      {
        params: { hotelRegionName: "hotels-near-new-delhi-railway-station" },
      },
      {
        params: { hotelRegionName: "hotels-in-south-delhi" },
      },
      {
        params: { hotelRegionName: "hotels-in-manali" },
      },
      {
        params: { hotelRegionName: "hotels-in-paharganj" },
      },
    ],
    // fallback: true,
    fallback: 'blocking',
  };
}

export async function getStaticProps(context: any) {
  const { params } = context;
  // console.log("params");
  // console.log(params);

  const regionSlugName = await params.hotelRegionName;

  const hotelsInRegionQuery = groq`
    *[_type == "navoptions" && slug.current == "${regionSlugName}"]{
      _id,
      "region_Name":name,
      "region_Slug_Name": slug.current,
      "hotelsList": hotels[]->{
          _id,
          "hotel_Id": id,
          landmark,
          card_amenities,
          "slug_Name": slug.current,
          "amenities_List":card_amenities_ref[]->{
            _id,
            name,
            "image_Url":image.asset->url,
          },
          "hotel_Img_List":images[].asset->url,
          longitude, latitude,
          map,
          name,
          rating,
          "min_Price":rooms[][0...1].plans[][0...1].price,
          "num_Of_Plans":count(rooms[].plans[].price),
        },
      "region_Image_Url":image.asset->url,
    }
  `;

  const hotelsInRegionList: any[] = await sanityClient.fetch(
    hotelsInRegionQuery
  );

  return {
    props: {
      hotelsInRegionList,
    },
  };
}
